<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.basics.dao.UserRoleMapper" >
  <resultMap id="BaseResultMap" type="com.simon.basics.model.UserRole" >
    <id column="user_role_id" property="userRoleId" jdbcType="BIGINT" />
    <result column="role_id" property="roleId" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    user_role_id, role_id, user_id, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from user_role
    where user_role_id = #{userRoleId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from user_role
    where user_role_id = #{userRoleId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.simon.basics.model.UserRole" >
    insert into user_role (user_role_id, role_id, account_id,
      create_time, update_time)
    values (#{userRoleId,jdbcType=BIGINT}, #{roleId,jdbcType=BIGINT}, #{accountId,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.simon.basics.model.UserRole" >
    insert into user_role
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userRoleId != null" >
        user_role_id,
      </if>
      <if test="roleId != null" >
        role_id,

      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userRoleId != null" >
        #{userRoleId,jdbcType=BIGINT},
      </if>
      <if test="roleId != null" >
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.basics.model.UserRole" >
    update user_role
    <set >
      <if test="roleId != null" >
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where user_role_id = #{userRoleId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.basics.model.UserRole" >
    update user_role
    set role_id = #{roleId,jdbcType=BIGINT},
      account_id = #{accountId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where user_role_id = #{userRoleId,jdbcType=BIGINT}
  </update>
</mapper>