<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.basics.dao.CourseOrderMapper" >
  <resultMap id="BaseResultMap" type="com.simon.basics.model.CourseOrder" >
    <id column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="order_no" property="orderNo" jdbcType="VARCHAR" />
    <result column="course_id" property="courseId" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="order_status" property="orderStatus" jdbcType="CHAR" />
    <result column="order_cost" property="orderCost" jdbcType="DECIMAL" />
    <result column="order_pay_status" property="orderPayStatus" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    order_id, order_no, course_id, account_id, order_status, order_cost, order_pay_status, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from course_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from course_order
    where order_id = #{orderId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.simon.basics.model.CourseOrder" >
    insert into course_order (order_id, order_no, course_id, 
      account_id, order_status, order_cost, 
      order_pay_status, create_time, update_time
      )
    values (#{orderId,jdbcType=BIGINT}, #{orderNo,jdbcType=VARCHAR}, #{courseId,jdbcType=BIGINT}, 
      #{accountId,jdbcType=BIGINT}, #{orderStatus,jdbcType=CHAR}, #{orderCost,jdbcType=DECIMAL}, 
      #{orderPayStatus,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.simon.basics.model.CourseOrder" >
    insert into course_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="orderNo != null" >
        order_no,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="orderCost != null" >
        order_cost,
      </if>
      <if test="orderPayStatus != null" >
        order_pay_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="orderNo != null" >
        #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=CHAR},
      </if>
      <if test="orderCost != null" >
        #{orderCost,jdbcType=DECIMAL},
      </if>
      <if test="orderPayStatus != null" >
        #{orderPayStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.basics.model.CourseOrder" >
    update course_order
    <set >
      <if test="orderNo != null" >
        order_no = #{orderNo,jdbcType=VARCHAR},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=CHAR},
      </if>
      <if test="orderCost != null" >
        order_cost = #{orderCost,jdbcType=DECIMAL},
      </if>
      <if test="orderPayStatus != null" >
        order_pay_status = #{orderPayStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.basics.model.CourseOrder" >
    update course_order
    set order_no = #{orderNo,jdbcType=VARCHAR},
      course_id = #{courseId,jdbcType=BIGINT},
      account_id = #{accountId,jdbcType=BIGINT},
      order_status = #{orderStatus,jdbcType=CHAR},
      order_cost = #{orderCost,jdbcType=DECIMAL},
      order_pay_status = #{orderPayStatus,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where order_id = #{orderId,jdbcType=BIGINT}
  </update>
</mapper>