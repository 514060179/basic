<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.basics.dao.RefundOrderMapper" >
  <resultMap id="BaseResultMap" type="com.simon.basics.model.RefundOrder" >
    <id column="refund_id" property="refundId" jdbcType="BIGINT" />
    <result column="order_id" property="orderId" jdbcType="BIGINT" />
    <result column="course_id" property="courseId" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="amount" property="amount" jdbcType="DECIMAL" />
    <result column="actual_amount" property="actualAmount" jdbcType="DECIMAL" />
    <result column="course_amount" property="courseAmount" jdbcType="DECIMAL" />
    <result column="order_pay_way" property="orderPayWay" jdbcType="CHAR" />
    <result column="course_total" property="courseTotal" jdbcType="INTEGER" />
    <result column="refund_course_total" property="refundCourseTotal" jdbcType="INTEGER" />
    <result column="refund_status" property="refundStatus" jdbcType="CHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    refund_id, order_id, course_id, account_id, amount, actual_amount, course_amount, 
    order_pay_way, course_total, refund_course_total, refund_status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from refund_order
    where refund_id = #{refundId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from refund_order
    where refund_id = #{refundId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.simon.basics.model.RefundOrder" >
    insert into refund_order (refund_id, order_id, course_id, 
      account_id, amount, actual_amount, 
      course_amount, order_pay_way, course_total, 
      refund_course_total, refund_status, create_time, 
      update_time)
    values (#{refundId,jdbcType=BIGINT}, #{orderId,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, 
      #{accountId,jdbcType=BIGINT}, #{amount,jdbcType=DECIMAL}, #{actualAmount,jdbcType=DECIMAL}, 
      #{courseAmount,jdbcType=DECIMAL}, #{orderPayWay,jdbcType=CHAR}, #{courseTotal,jdbcType=INTEGER}, 
      #{refundCourseTotal,jdbcType=INTEGER}, #{refundStatus,jdbcType=CHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.simon.basics.model.RefundOrder" >
    insert into refund_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="refundId != null" >
        refund_id,
      </if>
      <if test="orderId != null" >
        order_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="amount != null" >
        amount,
      </if>
      <if test="actualAmount != null" >
        actual_amount,
      </if>
      <if test="courseAmount != null" >
        course_amount,
      </if>
      <if test="orderPayWay != null" >
        order_pay_way,
      </if>
      <if test="courseTotal != null" >
        course_total,
      </if>
      <if test="refundCourseTotal != null" >
        refund_course_total,
      </if>
      <if test="refundStatus != null" >
        refund_status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="refundId != null" >
        #{refundId,jdbcType=BIGINT},
      </if>
      <if test="orderId != null" >
        #{orderId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        #{amount,jdbcType=DECIMAL},
      </if>
      <if test="actualAmount != null" >
        #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="courseAmount != null" >
        #{courseAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderPayWay != null" >
        #{orderPayWay,jdbcType=CHAR},
      </if>
      <if test="courseTotal != null" >
        #{courseTotal,jdbcType=INTEGER},
      </if>
      <if test="refundCourseTotal != null" >
        #{refundCourseTotal,jdbcType=INTEGER},
      </if>
      <if test="refundStatus != null" >
        #{refundStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.basics.model.RefundOrder" >
    update refund_order
    <set >
      <if test="orderId != null" >
        order_id = #{orderId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="amount != null" >
        amount = #{amount,jdbcType=DECIMAL},
      </if>
      <if test="actualAmount != null" >
        actual_amount = #{actualAmount,jdbcType=DECIMAL},
      </if>
      <if test="courseAmount != null" >
        course_amount = #{courseAmount,jdbcType=DECIMAL},
      </if>
      <if test="orderPayWay != null" >
        order_pay_way = #{orderPayWay,jdbcType=CHAR},
      </if>
      <if test="courseTotal != null" >
        course_total = #{courseTotal,jdbcType=INTEGER},
      </if>
      <if test="refundCourseTotal != null" >
        refund_course_total = #{refundCourseTotal,jdbcType=INTEGER},
      </if>
      <if test="refundStatus != null" >
        refund_status = #{refundStatus,jdbcType=CHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where refund_id = #{refundId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.basics.model.RefundOrder" >
    update refund_order
    set order_id = #{orderId,jdbcType=BIGINT},
      course_id = #{courseId,jdbcType=BIGINT},
      account_id = #{accountId,jdbcType=BIGINT},
      amount = #{amount,jdbcType=DECIMAL},
      actual_amount = #{actualAmount,jdbcType=DECIMAL},
      course_amount = #{courseAmount,jdbcType=DECIMAL},
      order_pay_way = #{orderPayWay,jdbcType=CHAR},
      course_total = #{courseTotal,jdbcType=INTEGER},
      refund_course_total = #{refundCourseTotal,jdbcType=INTEGER},
      refund_status = #{refundStatus,jdbcType=CHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where refund_id = #{refundId,jdbcType=BIGINT}
  </update>
</mapper>