<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.basics.dao.CourseRosterMapper" >
  <resultMap id="BaseResultMap" type="com.simon.basics.model.CourseRoster" >
    <id column="roster_id" property="rosterId" jdbcType="BIGINT" />
    <result column="course_id" property="courseId" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="roster_name" property="rosterName" jdbcType="VARCHAR" />
    <result column="roster_course_count_rest" property="rosterCourseCountRest" jdbcType="INTEGER" />
    <result column="roster_seat_x" property="rosterSeatX" jdbcType="INTEGER" />
    <result column="roster_seat_y" property="rosterSeatY" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <resultMap id="BaseWithUserResultMap" type="com.simon.basics.model.CourseRoster" extends="BaseResultMap">
    <association property="user" javaType="com.simon.basics.model.User">
      <result column="name" property="name" jdbcType="VARCHAR" />
      <result column="parent_name" property="parentName" jdbcType="VARCHAR" />
      <result column="sex" property="sex" jdbcType="CHAR" />
      <result column="age" property="age" jdbcType="INTEGER" />
      <result column="birthday" property="birthday" jdbcType="DATE" />
      <result column="phone" property="phone" jdbcType="VARCHAR" />
      <result column="address" property="address" jdbcType="VARCHAR" />
      <result column="grade_name" property="gradeName" jdbcType="VARCHAR" />
      <result column="school_name" property="schoolName" jdbcType="VARCHAR" />
      <result column="remark" property="remark" jdbcType="VARCHAR" />
    </association>
  </resultMap>
  <sql id="Base_Column_List" >
    roster_id, course_id, account_id, roster_name, roster_course_count_rest,
    roster_seat_x, roster_seat_y, create_time, update_time
  </sql>
  <sql id="Union_Column_List" >
    cr.roster_id, cr.course_id, cc.seat_id, cr.account_id, cr.roster_name, cr.roster_course_count_rest,
    cr.roster_seat_x, cr.roster_seat_y, cr.create_time, cr.update_time
  </sql>

  <sql id="Union_User_Column_List">
    u.name,u.parent_name, u.sex, u.age,u.birthday, u.phone, u.address,u.grade_name,u.school_name,u.remark,
    cr.roster_id, cr.course_id, cr.account_id, cr.roster_name, cr.roster_course_count_rest,
    cr.roster_seat_x, cr.roster_seat_y, cr.create_time, cr.update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from course_roster
    where roster_id = #{rosterId,jdbcType=BIGINT}
  </select>
  <select id="findByCourseIdAndAccountId" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from course_roster
    where course_id = #{courseId,jdbcType=BIGINT} and account_id = #{accountId,jdbcType=BIGINT}
  </select>
  <select id="findOneByConditon" resultMap="BaseWithUserResultMap" parameterType="com.simon.basics.model.CourseRoster" >
    select
    <include refid="Union_User_Column_List" />
    from course_roster cr
    inner join user u on cr.account_id=u.account_id
    <where>
      <if test="courseId != null" >
        and cr.course_id = #{courseId,jdbcType=BIGINT}
      </if>
      <if test="accountId != null" >
        and cr.account_id = #{accountId,jdbcType=BIGINT}
      </if>
      <if test="rosterName != null" >
        and cr.roster_name = #{rosterName,jdbcType=VARCHAR}
      </if>
      <if test="rosterCourseCountRest != null" >
        and cr.roster_course_count_rest = #{rosterCourseCountRest,jdbcType=INTEGER}
      </if>
      <if test="rosterSeatX != null" >
        and cr.roster_seat_x = #{rosterSeatX,jdbcType=INTEGER}
      </if>
      <if test="rosterSeatY != null" >
        and cr.roster_seat_y = #{rosterSeatY,jdbcType=INTEGER}
      </if>
    </where>
  </select>
  <select id="selectByCourseType" resultMap="BaseResultMap">
    select
    <include refid="Union_Column_List" />
    from course_roster cr
    inner join class_course cc
    on cr.course_id=cc.course_id and cr.account_id=#{accountId,jdbcType=BIGINT}
    where cc.type_id = #{typeId,jdbcType=BIGINT} and cr.roster_course_count_rest>0 LIMIT 0,1
  </select>

  <!--<select id="findTeacherCourseRoster" resultMap="BaseResultMap">-->
    <!--select-->
    <!--<include refid="Base_Column_List" />-->
    <!--FROM roster_attendance ra LEFT JOIN class_course cc ON ra.`course_id`=cc.`course_id`-->
    <!--where ra.course_id = #{courseId,jdbcType=BIGINT} and ra.attend_type=2 AND ra.attend_section_num=#{courseCurrent}-->
  <!--</select>-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from course_roster
    where roster_id = #{rosterId,jdbcType=BIGINT}
  </delete>
  <delete id="delByCourseIdAndAccountId">
    delete from course_roster
    where course_id = #{courseId,jdbcType=BIGINT} and account_id = #{accountId,jdbcType=BIGINT}
  </delete>
  <insert id="insertSelective" parameterType="com.simon.basics.model.CourseRoster" useGeneratedKeys="true" keyProperty="rosterId" >
    insert into course_roster
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rosterId != null" >
        roster_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="rosterName != null" >
        roster_name,
      </if>
      <if test="rosterCourseCountRest != null" >
        roster_course_count_rest,
      </if>
      <if test="rosterSeatX != null" >
        roster_seat_x,
      </if>
      <if test="rosterSeatY != null" >
        roster_seat_y,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rosterId != null" >
        #{rosterId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="rosterName != null" >
        #{rosterName,jdbcType=VARCHAR},
      </if>
      <if test="rosterCourseCountRest != null" >
        #{rosterCourseCountRest,jdbcType=INTEGER},
      </if>
      <if test="rosterSeatX != null" >
        #{rosterSeatX,jdbcType=INTEGER},
      </if>
      <if test="rosterSeatY != null" >
        #{rosterSeatY,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.basics.model.CourseRoster" >
    update course_roster
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="rosterName != null" >
        roster_name = #{rosterName,jdbcType=VARCHAR},
      </if>
      <if test="rosterCourseCountRest != null" >
        roster_course_count_rest = roster_course_count_rest-1,
      </if>
      <if test="rosterSeatX != null" >
        roster_seat_x = #{rosterSeatX,jdbcType=INTEGER},
      </if>
      <if test="rosterSeatY != null" >
        roster_seat_y = #{rosterSeatY,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where roster_id = #{rosterId,jdbcType=BIGINT}
    <if test="rosterCourseCountRest != null" >
      and roster_course_count_rest >0
    </if>
  </update>

  <update id="updateByAccountAndCourseSelective" parameterType="com.simon.basics.model.CourseRoster" >
    update course_roster
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="rosterName != null" >
        roster_name = #{rosterName,jdbcType=VARCHAR},
      </if>
      <if test="rosterCourseCountRest != null" >
        roster_course_count_rest = roster_course_count_rest-1,
      </if>
      <if test="rosterSeatX != null" >
        roster_seat_x = #{rosterSeatX,jdbcType=INTEGER},
      </if>
      <if test="rosterSeatY != null" >
        roster_seat_y = #{rosterSeatY,jdbcType=INTEGER},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=BIGINT} and course_id = #{courseId,jdbcType=BIGINT} and roster_course_count_rest>0
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.basics.model.CourseRoster" >
    update course_roster
    set course_id = #{courseId,jdbcType=BIGINT},
      account_id = #{accountId,jdbcType=BIGINT},
      roster_name = #{rosterName,jdbcType=VARCHAR},
      roster_course_count_rest = #{rosterCourseCountRest,jdbcType=INTEGER},
      roster_seat_x = #{rosterSeatX,jdbcType=INTEGER},
      roster_seat_y = #{rosterSeatY,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where roster_id = #{rosterId,jdbcType=BIGINT}
  </update>
</mapper>