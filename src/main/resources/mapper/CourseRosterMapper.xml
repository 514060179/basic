<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.basics.dao.CourseRosterMapper" >
  <resultMap id="BaseResultMap" type="com.simon.basics.model.CourseRoster" >
    <id column="roster_id" property="rosterId" jdbcType="BIGINT" />
    <result column="course_id" property="courseId" jdbcType="BIGINT" />
    <result column="seat_id" property="seatId" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="roster_name" property="rosterName" jdbcType="VARCHAR" />
    <result column="roster_course_count_rest" property="rosterCourseCountRest" jdbcType="INTEGER" />
    <result column="roster_seat_x" property="rosterSeatX" jdbcType="INTEGER" />
    <result column="roster_seat_y" property="rosterSeatY" jdbcType="INTEGER" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    roster_id, course_id, seat_id, account_id, roster_name, roster_course_count_rest, 
    roster_seat_x, roster_seat_y, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from course_roster
    where roster_id = #{rosterId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from course_roster
    where roster_id = #{rosterId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.simon.basics.model.CourseRoster" >
    insert into course_roster (roster_id, course_id, seat_id, 
      account_id, roster_name, roster_course_count_rest, 
      roster_seat_x, roster_seat_y, create_time, 
      update_time)
    values (#{rosterId,jdbcType=BIGINT}, #{courseId,jdbcType=BIGINT}, #{seatId,jdbcType=BIGINT}, 
      #{accountId,jdbcType=BIGINT}, #{rosterName,jdbcType=VARCHAR}, #{rosterCourseCountRest,jdbcType=INTEGER}, 
      #{rosterSeatX,jdbcType=INTEGER}, #{rosterSeatY,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.simon.basics.model.CourseRoster" >
    insert into course_roster
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="rosterId != null" >
        roster_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="seatId != null" >
        seat_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="rosterName != null" >
        roster_name,
      </if>
      <if test="rosterCourseCountRest != null" >
        roster_course_count_rest,
      </if>
      <if test="rosterSeatX != null" >
        roster_seat_x,
      </if>
      <if test="rosterSeatY != null" >
        roster_seat_y,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="rosterId != null" >
        #{rosterId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="seatId != null" >
        #{seatId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="rosterName != null" >
        #{rosterName,jdbcType=VARCHAR},
      </if>
      <if test="rosterCourseCountRest != null" >
        #{rosterCourseCountRest,jdbcType=INTEGER},
      </if>
      <if test="rosterSeatX != null" >
        #{rosterSeatX,jdbcType=INTEGER},
      </if>
      <if test="rosterSeatY != null" >
        #{rosterSeatY,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.basics.model.CourseRoster" >
    update course_roster
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="seatId != null" >
        seat_id = #{seatId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="rosterName != null" >
        roster_name = #{rosterName,jdbcType=VARCHAR},
      </if>
      <if test="rosterCourseCountRest != null" >
        roster_course_count_rest = #{rosterCourseCountRest,jdbcType=INTEGER},
      </if>
      <if test="rosterSeatX != null" >
        roster_seat_x = #{rosterSeatX,jdbcType=INTEGER},
      </if>
      <if test="rosterSeatY != null" >
        roster_seat_y = #{rosterSeatY,jdbcType=INTEGER},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where roster_id = #{rosterId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.simon.basics.model.CourseRoster" >
    update course_roster
    set course_id = #{courseId,jdbcType=BIGINT},
      seat_id = #{seatId,jdbcType=BIGINT},
      account_id = #{accountId,jdbcType=BIGINT},
      roster_name = #{rosterName,jdbcType=VARCHAR},
      roster_course_count_rest = #{rosterCourseCountRest,jdbcType=INTEGER},
      roster_seat_x = #{rosterSeatX,jdbcType=INTEGER},
      roster_seat_y = #{rosterSeatY,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where roster_id = #{rosterId,jdbcType=BIGINT}
  </update>
</mapper>