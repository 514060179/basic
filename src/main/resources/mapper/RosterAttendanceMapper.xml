<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.basics.dao.RosterAttendanceMapper" >
  <resultMap id="BaseResultMap" type="com.simon.basics.model.RosterAttendance" >
    <id column="attendance_id" property="attendanceId" jdbcType="BIGINT" />
    <result column="course_id" property="courseId" jdbcType="BIGINT" />
    <result column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="attend_section_num" property="attendSectionNum" jdbcType="INTEGER" />
    <result column="attend_name" property="attendName" jdbcType="VARCHAR" />
    <result column="attend_remark" property="attendRemark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    attendance_id, course_id, account_id, attend_section_num, attend_name, attend_remark, 
    create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from roster_attendance
    where attendance_id = #{attendanceId,jdbcType=BIGINT}
  </select>
  <select id="selectByCourseAndNum" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from roster_attendance
    where course_id = #{courseId,jdbcType=INTEGER} and attend_section_num=#{courseCurrent,jdbcType=INTEGER}
  </select>
  <insert id="insertSelective" parameterType="com.simon.basics.model.RosterAttendance" >
    insert into roster_attendance
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="attendanceId != null" >
        attendance_id,
      </if>
      <if test="courseId != null" >
        course_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="attendSectionNum != null" >
        attend_section_num,
      </if>
      <if test="attendName != null" >
        attend_name,
      </if>
      <if test="attendRemark != null" >
        attend_remark,
      </if>
      <if test="attendanceType != null" >
        attendance_type,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="attendanceId != null" >
        #{attendanceId,jdbcType=BIGINT},
      </if>
      <if test="courseId != null" >
        #{courseId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="attendSectionNum != null" >
        #{attendSectionNum,jdbcType=INTEGER},
      </if>
      <if test="attendName != null" >
        #{attendName,jdbcType=VARCHAR},
      </if>
      <if test="attendRemark != null" >
        #{attendRemark,jdbcType=VARCHAR},
      </if>
      <if test="attendanceType != null" >
        #{attendanceType,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.basics.model.RosterAttendance" >
    update roster_attendance
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="attendSectionNum != null" >
        attend_section_num = #{attendSectionNum,jdbcType=INTEGER},
      </if>
      <if test="attendName != null" >
        attend_name = #{attendName,jdbcType=VARCHAR},
      </if>
      <if test="attendRemark != null" >
        attend_remark = #{attendRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where attendance_id = #{attendanceId,jdbcType=BIGINT}
  </update>
  <update id="updateByCourseAndNum" parameterType="com.simon.basics.model.RosterAttendance" >
    update roster_attendance
    <set >
      <if test="courseId != null" >
        course_id = #{courseId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        account_id = #{accountId,jdbcType=BIGINT},
      </if>
      <if test="attendSectionNum != null" >
        attend_section_num = #{attendSectionNum,jdbcType=INTEGER},
      </if>
      <if test="attendName != null" >
        attend_name = #{attendName,jdbcType=VARCHAR},
      </if>
      <if test="attendRemark != null" >
        attend_remark = #{attendRemark,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where  course_id = #{courseId,jdbcType=BIGINT} and attend_section_num = #{attendSectionNum,jdbcType=INTEGER}
  </update>
</mapper>