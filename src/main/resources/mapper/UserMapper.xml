<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.simon.basics.dao.UserMapper" >
  <resultMap id="ParentResultMap" type="com.simon.basics.model.Account" >
    <id column="account_id" property="accountId" jdbcType="BIGINT" />
    <result column="username" property="username" jdbcType="VARCHAR" />
    <result column="password" property="password" jdbcType="VARCHAR" />
    <result column="deleted" property="deleted" jdbcType="BIT" />
    <result column="type" property="type" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="BaseResultMap" type="com.simon.basics.model.User" extends="ParentResultMap">
    <id column="user_id" property="userId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="parent_name" property="parentName" jdbcType="VARCHAR" />
    <result column="school_number" property="schoolNumber" jdbcType="VARCHAR" />
    <result column="sex" property="sex" jdbcType="CHAR" />
    <result column="age" property="age" jdbcType="INTEGER" />
    <result column="birthday" property="birthday" jdbcType="DATE" />
    <result column="phone" property="phone" jdbcType="VARCHAR" />
    <result column="card_num" property="cardNum" jdbcType="VARCHAR" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="CHAR" />
    <result column="teacher_charge_type" property="teacherChargeType" jdbcType="CHAR" />
    <result column="grade_name" property="gradeName" jdbcType="VARCHAR" />
    <result column="school_name" property="schoolName" jdbcType="VARCHAR" />
    <result column="remark" property="remark" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Base_Column_List" >
    a.deleted,a.username,a.password,u.user_id, a.account_id, u.name,u.parent_name,u.school_number, u.sex, u.age,u.birthday, u.phone, u.card_num, u.address, a.`type`, u.remark, u.create_time,
    u.update_time,u.teacher_charge_type,u.grade_name,u.school_name
  </sql>
  <insert id="insertSelective" parameterType="com.simon.basics.model.User" >
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        user_id,
      </if>
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="parentName != null" >
        parent_name,
      </if>
      <if test="schoolNumber != null" >
        school_number,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="age != null" >
        age,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="phone != null" >
        phone,
      </if>
      <if test="cardNum != null" >
        card_num,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="remark != null" >
        remark,
      </if>
      <if test="gradeName != null" >
        grade_name,
      </if>
      <if test="schoolName != null" >
        school_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="teacherChargeType != null" >
        teacher_charge_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="userId != null" >
        #{userId,jdbcType=BIGINT},
      </if>
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="parentName != null" >
        #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="schoolNumber != null" >
        #{schoolNumber,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        #{age,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=DATE},
      </if>
      <if test="phone != null" >
        #{phone,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null" >
        #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
      <if test="remark != null" >
        #{remark,jdbcType=VARCHAR},
      </if>
      <if test="gradeName != null" >
        #{gradeName,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null" >
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="teacherChargeType != null" >
        #{teacherChargeType,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <insert id="insertAccountSelective" parameterType="com.simon.basics.model.Account" keyProperty="accountId" useGeneratedKeys="true" >
    insert into account
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        account_id,
      </if>
      <if test="username != null" >
        username,
      </if>
      <if test="password != null" >
        password,
      </if>
      <if test="type != null" >
        type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="accountId != null" >
        #{accountId,jdbcType=BIGINT},
      </if>
      <if test="username != null" >
        #{username,jdbcType=VARCHAR},
      </if>
      <if test="password != null" >
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=CHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.simon.basics.model.User" >
    update user
    <set >
      <if test="name != null" >
        NAME = #{name,jdbcType=VARCHAR},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="age != null" >
        age = #{age,jdbcType=INTEGER},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=DATE},
      </if>
      <if test="parentName != null" >
        parent_name = #{parentName,jdbcType=VARCHAR},
      </if>
      <if test="schoolNumber != null" >
        school_number = #{schoolNumber,jdbcType=VARCHAR},
      </if>
      <if test="cardNum != null" >
        card_num = #{cardNum,jdbcType=VARCHAR},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <!--<if test="type != null" >-->
        <!--TYPE = #{type,jdbcType=CHAR},-->
      <!--</if>-->
      <if test="remark != null" >
        remark = #{remark,jdbcType=VARCHAR},
      </if>
      <if test="teacherChargeType != null" >
        teacher_charge_type = #{teacherChargeType,jdbcType=CHAR},
      </if>
    </set>
    where account_id = #{accountId,jdbcType=BIGINT}
  </update>
  <update id="updatePassword"  >
    update account set password = #{password,jdbcType=VARCHAR}
    where account_id = #{accountId,jdbcType=BIGINT}
  </update>
  <select id="findByUserName" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from account a LEFT JOIN user u ON u.account_id=a.account_id
    where a.username = #{userName,jdbcType=VARCHAR}
  </select>
  <select id="findBySchoolNumber" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from account a LEFT JOIN user u ON u.account_id=a.account_id
    where u.school_number = #{schoolNumber,jdbcType=VARCHAR}
  </select>

  <select id="findListByCondition" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from account a LEFT JOIN user u ON u.account_id=a.account_id
    <where>
      <if test="accountId != null" >
        AND a.account_id = #{accountId,jdbcType=BIGINT}
      </if>
      <if test="name != null" >
        AND u.`name` like concat('%',#{name,jdbcType=VARCHAR},'%')
      </if>
      <if test="schoolNumber != null" >
        AND u.`school_number` like concat('%',#{schoolNumber,jdbcType=VARCHAR},'%')
      </if>
      <if test="sex != null" >
        AND u.sex = #{sex,jdbcType=CHAR}
      </if>
      <if test="type != null" >
        AND a.type = #{type,jdbcType=CHAR}
      </if>
      <if test="age != null" >
        AND u.age = #{age,jdbcType=INTEGER}
      </if>
      <if test="username != null" >
        AND a.username like concat('%',#{username,jdbcType=VARCHAR},'%')
      </if>
      <if test="keyword != null and keyword != ''" >
        AND (
        a.username like concat('%',#{keyword,jdbcType=VARCHAR},'%')
        or u.phone like concat('%',#{keyword,jdbcType=VARCHAR},'%')
        or u.`name` like concat('%',#{keyword,jdbcType=VARCHAR},'%')
        or u.`school_number` like concat('%',#{keyword,jdbcType=VARCHAR},'%')
        )
      </if>
      <if test="birthday != null" >
        AND u.birthday = #{birthday,jdbcType=DATE}
      </if>
      <if test="phone != null" >
        AND u.phone like concat('%',#{phone,jdbcType=VARCHAR},'%')
      </if>
      <if test="cardNum != null" >
        AND u.card_num like concat('%',#{cardNum,jdbcType=VARCHAR},'%')
      </if>
      <if test="address != null" >
        AND u.address = #{address,jdbcType=VARCHAR}
      </if>
      <if test="deleted != null">
        AND a.deleted = #{deleted,jdbcType=BIT}
      </if>
    </where>
    order by u.create_time desc
  </select>

  <select id="noChoiceSeatList" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    FROM
    course_order co
    LEFT JOIN course_roster cr
    ON co.`account_id` = cr.`account_id`
    AND co.`course_id` = cr.`course_id`
    INNER JOIN account a
    ON co.`account_id` = a.`account_id`
    LEFT JOIN `user` u
    ON u.account_id = a.account_id
    WHERE co.`order_status` = '1'
    AND cr.roster_id IS NULL
    AND co.`course_id`=#{courseId}
  </select>
  <select id="additionalUserList" resultMap="BaseResultMap">
    select
    DISTINCT
    <include refid="Base_Column_List" />
    FROM
    class_course cc1
    JOIN class_course cc2
    ON cc1.`type_id` = cc2.`type_id`
    AND cc1.`course_id` = #{courseId}
    AND cc2.`course_id` != #{courseId}
    LEFT JOIN course_roster cr
    ON cr.`course_id` = cc2.`course_id`
    INNER JOIN `user` u
    ON cr.`account_id` = u.`account_id`
    INNER JOIN account a
    ON u.`account_id` = a.`account_id`
  </select>

  <update id="delete">
    UPDATE account a LEFT JOIN `user` u ON a.`account_id`=u.`account_id` SET a.`deleted`=#{deleted,jdbcType=BIT},u.`deleted`=#{deleted,jdbcType=BIT} WHERE a.account_id = #{accountId,jdbcType=BIGINT}
  </update>
</mapper>